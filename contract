// SPDX-License-Identifier: MIT
pragma solidity 0.8.24;
contract Lottery{

    address public manager;
    address payable[] public players; // dynamic array
    address payable public winner;

    constructor(){
        manager=msg.sender;
    }

    function participate() public payable{
        require(msg.value==1 ether,"please pay 1 ether");
        players.push(payable(msg.sender));

    }

    function getBalance() public view returns(uint){
        require(manager==msg.sender,"Only the manager can excess");
        return address(this).balance;
    }

    function random() public view returns(uint){
        return uint(keccak256(abi.encodePacked(block.prevrandao,block.timestamp,players.length)));
    }

    function pickWinner() public{
        require(manager==msg.sender,"you are not manager");
        require(players.length>=3,"Players are less");

        uint r=random();
        uint index=r%players.length;
        winner=players[index];
        winner.transfer(getBalance());
        

    }
}
